#include <unistd.h>

void    ft_print_result(int nbr, int size, char sign_nbr)
{
    int nbr_p[size];
    int i;
    i = 0;

    while(i <= size - 1 )
    {
        nbr_p[i] = nbr % 10 + 0x30;
        nbr /= 10;
        i++;
    }
    write(1, &sign_nbr, 1);
    i = size-1;
    while(i >= 0)
    {
        write(1, &nbr_p[i], 1);
        i--;
    }
}

void    ft_itoa(int nbr)
{
    int             num_digits;
    unsigned int    nbr_by_10;
    char            sign_nbr;
    char            *res;

    sign_nbr ='\0';

    if( nbr < 0)
    {
        sign_nbr = '-';
        nbr *= -1;
    }

    nbr_by_10 = nbr;
    num_digits = 0;

    while(nbr_by_10 != 0)
    {
        num_digits++;
        nbr_by_10 /= 10;
    }
    if(num_digits == 0) num_digits = 1;
    
    res = malloc ()

    ft_print_result(nbr, num_digits, sign_nbr);
}
